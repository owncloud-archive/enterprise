workspace:
  base: /drone
  path: src/github.com/owncloud-docker/enterprise

branches:
  - master

clone:
  git:
    image: plugins/git:1
    pull: true

pipeline:
  tarball:
    image: plugins/download:1
    pull: true
    secrets: [ download_username, download_password ]
    source: https://download.owncloud.com/internal/10.2.1/owncloud-enterprise-complete-20190703.tar.bz2
    sha256: b4b4591af57b5b8ab40299f0abde593371269b9a4bac0eb0aba27cd41e0485ab

  wait:
    image: owncloud/ubuntu:latest
    pull: true
    commands:
      - wait-for-it -t 600 docker:2375

  build:
    image: toolhippie/docker:latest
    pull: true
    environment:
      - DOCKER_HOST=tcp://docker:2375
    commands:
      - docker build -t registry.owncloud.com/owncloud/enterprise:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER} .

  smoketest-prepare-testsuite:
    image: owncloudci/php
    pull: true
    commands:
      - mkdir -p /drone/owncloud-smoketest
      - wget -qO- "https://download.owncloud.org/community/testing/owncloud-10.2.1-qa.tar.bz2" | tar -xj -C /drone/owncloud-smoketest --strip 1
      - cat /drone/owncloud-smoketest/version.php
      - mkdir -p /drone/owncloud-smoketest/vendor-bin/behat
      - wget https://raw.githubusercontent.com/owncloud/core/release-10.2.1/vendor-bin/behat/composer.json -O /drone/owncloud-smoketest/vendor-bin/behat/composer.json
      - cd /drone/owncloud-smoketest/vendor-bin/behat/ && composer install

  smoketest-create-docker-network:
    image: toolhippie/docker:latest
    pull: true
    environment:
      - DOCKER_HOST=tcp://docker:2375
    commands:
      - docker network create oc

  smoketest-redis:
    image: toolhippie/docker:latest
    pull: true
    detach: true
    environment:
      - DOCKER_HOST=tcp://docker:2375
    commands:
      - docker run --network=oc --name redis --network-alias redis library/redis:4

  smoketest-database:
    image: toolhippie/docker:latest
    pull: true
    detach: true
    environment:
      - DOCKER_HOST=tcp://docker:2375
      - MYSQL_ROOT_PASSWORD=owncloud
      - MYSQL_USER=owncloud
      - MYSQL_PASSWORD=owncloud
      - MYSQL_DATABASE=owncloud
    commands:
      - |
        docker run --network=oc --name db --network-alias db \
        -e MYSQL_ROOT_PASSWORD \
        -e MYSQL_USER \
        -e MYSQL_PASSWORD \
        -e MYSQL_DATABASE \
        library/mysql:5.7

  smoketest-mailhog:
    image: toolhippie/docker:latest
    pull: true
    detach: true
    environment:
      - DOCKER_HOST=tcp://docker:2375
    commands:
      - docker run -p 1025:1025 -p 8025:8025 --network=oc --network-alias email --name email mailhog/mailhog:latest

  smoketest-server:
    image: toolhippie/docker:latest
    pull: true
    detach: true
    environment:
      - DOCKER_HOST=tcp://docker:2375
      - DEBUG=true
      - OWNCLOUD_REDIS_HOST=redis
      - OWNCLOUD_DB_TYPE=mysql
      - OWNCLOUD_DB_NAME=owncloud
      - OWNCLOUD_DB_USERNAME=owncloud
      - OWNCLOUD_DB_PASSWORD=owncloud
      - OWNCLOUD_DB_HOST=db
      - OWNCLOUD_APPS_INSTALL=https://github.com/owncloud/testing/releases/download/latest/testing.tar.gz
      - OWNCLOUD_APPS_ENABLE=testing
    commands:
      - |
        docker run \
        --network=oc \
        --name owncloud \
        -e DEBUG \
        -p 8000:8080 \
        -e OWNCLOUD_APPS_INSTALL \
        -e OWNCLOUD_APPS_ENABLE \
        -e OWNCLOUD_REDIS_HOST \
        -e OWNCLOUD_DB_TYPE \
        -e OWNCLOUD_DB_NAME \
        -e OWNCLOUD_DB_USERNAME \
        -e OWNCLOUD_DB_PASSWORD \
        -e OWNCLOUD_DB_HOST \
        --network=oc \
        registry.owncloud.com/owncloud/enterprise:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER}

  wait-for-owncloud:
    image: owncloud/ubuntu:latest
    pull: true
    commands:
      - wait-for-it -t 600 docker:8000

  run-api-smoke-test:
    image: owncloudci/php
    pull: true
    environment:
      - TEST_SERVER_URL=http://docker:8000
      - SKELETON_DIR=/mnt/data/apps/testing/data/apiSkeleton
    commands:
      - cd /drone/owncloud-smoketest/tests/acceptance
      - bash run.sh --remote --tags "@smokeTest&&~@skip&&~@skipOnDockerContainerTesting" --type api

  run-ui-smoke-test:
    image: owncloudci/php
    pull: true
    environment:
      - BROWSER=chrome
      - SELENIUM_HOST=selenium
      - SELENIUM_PORT=4444
      - PLATFORM=Linux
      - MAILHOG_HOST=email
      - LOCAL_MAILHOG_HOST=docker
      - TEST_SERVER_URL=http://docker:8000
      - SKELETON_DIR=/mnt/data/apps/testing/data/webUISkeleton
    commands:
      - cd /drone/owncloud-smoketest/tests/acceptance
      - bash run.sh --remote --tags "@smokeTest&&~@skip&&~@skipOnDockerContainerTesting" --type webUI


  prepublish:
    image: toolhippie/docker:latest
    pull: true
    secrets: [ docker_username, docker_password ]
    environment:
      - DOCKER_HOST=tcp://docker:2375
    commands:
      - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin registry.owncloud.com
      - docker push registry.owncloud.com/owncloud/enterprise:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER}
    when:
      event: [ push, pull_request ]

  clair:
    image: toolhippie/klar:latest
    pull: true
    secrets:
      - source: docker_username
        target: docker_user
      - source: docker_password
        target: docker_password
    environment:
      - CLAIR_ADDR=clair.owncloud.com
      - CLAIR_OUTPUT=High
    commands:
      - klar registry.owncloud.com/owncloud/enterprise:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER}
    when:
      event: [ push, pull_request ]

  publish:
    image: toolhippie/docker:latest
    pull: true
    secrets: [ docker_username, docker_password ]
    environment:
      - DOCKER_HOST=tcp://docker:2375
    commands:
      - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin registry.owncloud.com
      - docker tag registry.owncloud.com/owncloud/enterprise:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER} registry.owncloud.com/owncloud/enterprise:latest
      - docker push registry.owncloud.com/owncloud/enterprise:latest
      - docker tag registry.owncloud.com/owncloud/enterprise:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER} registry.owncloud.com/owncloud/enterprise:latest-$(date '+%Y%m%d')
      - docker push registry.owncloud.com/owncloud/enterprise:latest-$(date '+%Y%m%d')
      - docker tag registry.owncloud.com/owncloud/enterprise:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER} registry.owncloud.com/owncloud/enterprise:10.2.1
      - docker push registry.owncloud.com/owncloud/enterprise:10.2.1
      - docker tag registry.owncloud.com/owncloud/enterprise:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER} registry.owncloud.com/owncloud/enterprise:10.2.1-$(date '+%Y%m%d')
      - docker push registry.owncloud.com/owncloud/enterprise:10.2.1-$(date '+%Y%m%d')
      - docker tag registry.owncloud.com/owncloud/enterprise:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER} registry.owncloud.com/owncloud/enterprise:10.2
      - docker push registry.owncloud.com/owncloud/enterprise:10.2
    when:
      event: [ push ]

  # FIXME: currently it removes the built image as well.
  # cleanup:
  #   image: toolhippie/reg:latest
  #   pull: true
  #   secrets: [ docker_username, docker_password ]
  #   commands:
  #     - reg rm --username $DOCKER_USERNAME --password $DOCKER_PASSWORD registry.owncloud.com/owncloud/enterprise:${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER}
  #   when:
  #     event: [ push, pull_request ]
  #     status: [ success, failure ]

  microbadger:
    image: plugins/webhook:1
    pull: true
    secrets: [ webhook_urls ]
    when:
      local: false
      event: [ push ]

  slack:
    image: plugins/slack:1
    pull: true
    secrets: [ slack_webhook ]
    channel: docker
    when:
      local: false
      event: [ push ]
      status: [ changed, failure ]

services:
  docker:
    image: docker:18.04-dind

  selenium:
    image: selenium/standalone-chrome-debug:latest
    pull: true
